"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload","angucomplete-alt","ngLodash","ngTasty","ngSanitize","ui.select"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName),angular.module(applicationModuleName).constant("Alerts",{periods:[{value:"5",name:"5 Minutes"},{value:"15",name:"15 Minutes"},{value:"60",name:"1 hour"},{value:"120",name:"2 hour"},{value:"360",name:"6 hour"},{value:"720",name:"12 hour"},{value:"1440",name:"24 hour"}]}),angular.module(applicationModuleName).filter("propsFilter",function(){return function(items,props){var out=[];if(angular.isArray(items)){var keys=Object.keys(props);items.forEach(function(item){for(var itemMatches=!1,i=0;i<keys.length;i++){var prop=keys[i],text=props[prop].toLowerCase();if(item[prop].toString().toLowerCase().indexOf(text)!==-1){itemMatches=!0;break}}itemMatches&&out.push(item)})}else out=items;return out}})};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){if(void 0!==Authentication.user.roles&&Authentication.user.roles.indexOf(role)!==-1)return allowed=!0,!0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
!function(app){"use strict";app.registerModule("adaccounts")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("adsets")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("alerts")}(ApplicationConfiguration);
"use strict";ApplicationConfiguration.registerModule("articles");
"use strict";ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]);
!function(app){"use strict";app.registerModule("messages")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("notificationevents")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("trackingparams")}(ApplicationConfiguration);
"use strict";ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]);
!function(){"use strict";function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Ad Accounts",state:"adaccounts",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","adaccounts",{title:"List Ad accounts",state:"adaccounts.list"})}angular.module("adaccounts").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("adaccounts",{"abstract":!0,url:"/adaccounts",template:"<ui-view/>"}).state("adaccounts.list",{url:"",templateUrl:"modules/adaccounts/client/views/list-adaccounts.client.view.html",controller:"AdaccountsListController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Adaccounts List"}}).state("adaccounts.create",{url:"/create",templateUrl:"modules/adaccounts/client/views/form-adaccount.client.view.html",controller:"AdaccountsController",controllerAs:"vm",resolve:{adaccountResolve:newAdaccount},data:{roles:["user","admin"],pageTitle:"Adaccounts Create"}}).state("adaccounts.edit",{url:"/:adaccountId/edit",templateUrl:"modules/adaccounts/client/views/form-adaccount.client.view.html",controller:"AdaccountsController",controllerAs:"vm",resolve:{adaccountResolve:getAdaccount},data:{roles:["user","admin"],pageTitle:"Edit Adaccount {{ adaccountResolve.name }}"}}).state("adaccounts.view",{url:"/:adaccountId",templateUrl:"modules/adaccounts/client/views/view-adaccount.client.view.html",controller:"AdaccountsController",controllerAs:"vm",resolve:{adaccountResolve:getAdaccount},data:{roles:["user","admin"],pageTitle:"Adaccount {{ articleResolve.name }}"}})}function getAdaccount($stateParams,AdaccountsService){return AdaccountsService.get({adaccountId:$stateParams.adaccountId}).$promise}function newAdaccount(AdaccountsService){return new AdaccountsService}angular.module("adaccounts").config(routeConfig),routeConfig.$inject=["$stateProvider"],getAdaccount.$inject=["$stateParams","AdaccountsService"],newAdaccount.$inject=["AdaccountsService"]}();
!function(){"use strict";function AdaccountsController($scope,$state,Authentication,adaccount){function remove(){confirm("Are you sure you want to delete?")&&vm.adaccount.$remove($state.go("adaccounts.list"))}function save(isValid){function successCallback(res){$state.go("adaccounts.view",{adaccountId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.adaccount._id?vm.adaccount.$update(successCallback,errorCallback):vm.adaccount.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.adaccountForm"),!1)}var vm=this;vm.authentication=Authentication,vm.adaccount=adaccount,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("adaccounts").controller("AdaccountsController",AdaccountsController),AdaccountsController.$inject=["$scope","$state","Authentication","adaccountResolve"]}();
!function(){"use strict";function AdaccountsListController(AdaccountsService,$state,$http){function remove(index){"undefined"!=typeof vm.adaccounts[index]?(vm.adaccount=vm.adaccounts[index],confirm("Are you sure you want to delete?")&&vm.adaccount.$remove($state.go($state.current,{},{reload:!0}))):confirm("Current index doesn't exist")}var vm=this;vm.adaccounts=AdaccountsService.query(),vm.remove=remove,vm.status=[{status:1,label:"ACTIVE"},{status:2,label:" DISABLED"},{status:3,label:"UNSETTLED"},{status:7,label:"PENDING_RISK_REVIEW"},{status:9,label:"IN_GRACE_PERIOD"},{status:100,label:"PENDING_CLOSURE"},{status:101,label:"CLOSED"},{status:102,label:"PENDING_SETTLEMENT"},{status:201,label:"ANY_ACTIVE"},{status:202,label:"ANY_CLOSED"}],vm.init={count:25,page:1,sortBy:"account_id",sortOrder:"dsc"},vm.filterBy={account_id:"",account_name:"",status:"",user:""},vm.getResource=function(params,paramsObj){var sortVal="";"dsc"===paramsObj.sortOrder?sortVal="-"+paramsObj.sortBy:"asc"===paramsObj.sortOrder&&(sortVal=paramsObj.sortBy),paramsObj.sort=sortVal;var urlApi="/api/adaccounts/";return $http.get(urlApi,{params:paramsObj}).then(function(response){return{rows:response.data.rows,header:response.data.header,pagination:response.data.pagination,sortBy:response.data["sort-by"],sortOrder:response.data["sort-order"]}})}}angular.module("adaccounts").controller("AdaccountsListController",AdaccountsListController),AdaccountsListController.$inject=["AdaccountsService","$state","$http"]}();
!function(){"use strict";function AdaccountsService($resource){return $resource("api/adaccounts/:adaccountId",{adaccountId:"@_id"},{query:{method:"GET",isArray:!0,transformResponse:function(data){var dataObject=JSON.parse(data);return angular.fromJson(dataObject.rows)}},update:{method:"PUT"}})}angular.module("adaccounts").factory("AdaccountsService",AdaccountsService),AdaccountsService.$inject=["$resource"]}();
!function(){"use strict";function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Adsets",state:"adsets",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","adsets",{title:"List Adsets",state:"adsets.list"})}angular.module("adsets").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("adsets",{"abstract":!0,url:"/adsets",template:"<ui-view/>"}).state("adsets.list",{url:"",templateUrl:"modules/adsets/client/views/list-adsets.client.view.html",controller:"AdsetsListController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Adsets List"}}).state("adsets.create",{url:"/create",templateUrl:"modules/adsets/client/views/form-adset.client.view.html",controller:"AdsetsController",controllerAs:"vm",resolve:{adsetResolve:newAdset},data:{roles:["user","admin"],pageTitle:"Adsets Create"}}).state("adsets.edit",{url:"/:adsetId/edit",templateUrl:"modules/adsets/client/views/form-adset.client.view.html",controller:"AdsetsController",controllerAs:"vm",resolve:{adsetResolve:getAdset},data:{roles:["user","admin"],pageTitle:"Edit Adset {{ adsetResolve.name }}"}}).state("adsets.view",{url:"/:adsetId",templateUrl:"modules/adsets/client/views/view-adset.client.view.html",controller:"AdsetsController",controllerAs:"vm",resolve:{adsetResolve:getAdset},data:{roles:["user","admin"],pageTitle:"Adset {{ articleResolve.name }}"}})}function getAdset($stateParams,AdsetsService){return AdsetsService.get({adsetId:$stateParams.adsetId}).$promise}function newAdset(AdsetsService){return new AdsetsService}angular.module("adsets").config(routeConfig),routeConfig.$inject=["$stateProvider"],getAdset.$inject=["$stateParams","AdsetsService"],newAdset.$inject=["AdsetsService"]}();
!function(){"use strict";function AdsetsController($scope,$state,Authentication,adset){function remove(){confirm("Are you sure you want to delete?")&&vm.adset.$remove($state.go("adsets.list"))}function save(isValid){function successCallback(res){$state.go("adsets.view",{adsetId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.adset._id?vm.adset.$update(successCallback,errorCallback):vm.adset.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.adsetForm"),!1)}var vm=this;vm.authentication=Authentication,vm.adset=adset,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("adsets").controller("AdsetsController",AdsetsController),AdsetsController.$inject=["$scope","$state","Authentication","adsetResolve"]}();
!function(){"use strict";function AdsetsListController(AdsetsService,$http){var vm=this;vm.adsets=AdsetsService.query(),vm.init={count:25,page:1,sortBy:"camp_name",sortOrder:"dsc"},vm.filterBy={camp_name:"",adset_name:"",adset_id:"",status:"",reach:"",daily_budget:"",amount_spent:"",schedule:"",type:"",user:""},vm.getResource=function(params,paramsObj){var sortVal="";"dsc"===paramsObj.sortOrder?sortVal="-"+paramsObj.sortBy:"asc"===paramsObj.sortOrder&&(sortVal=paramsObj.sortBy),paramsObj.sort=sortVal;var urlApi="/api/adsets/";return $http.get(urlApi,{params:paramsObj}).then(function(response){return{rows:response.data.rows,header:response.data.header,pagination:response.data.pagination,sortBy:response.data["sort-by"],sortOrder:response.data["sort-order"]}})}}angular.module("adsets").controller("AdsetsListController",AdsetsListController),AdsetsListController.$inject=["AdsetsService","$http"]}();
!function(){"use strict";function AdsetsService($resource){return $resource("api/adsets/:adsetId",{adsetId:"@_id"},{query:{method:"GET",isArray:!0,transformResponse:function(data){var dataObject=JSON.parse(data);return angular.fromJson(dataObject.rows)}},update:{method:"PUT"}})}angular.module("adsets").factory("AdsetsService",AdsetsService),AdsetsService.$inject=["$resource"]}();
!function(){"use strict";function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Alerts",state:"alerts",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","alerts",{title:"List Alerts",state:"alerts.list"}),Menus.addSubMenuItem("topbar","alerts",{title:"Create Alert",state:"alerts.create",roles:["user"]})}angular.module("alerts").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("alerts",{"abstract":!0,url:"/alerts",template:"<ui-view/>"}).state("alerts.list",{url:"",templateUrl:"modules/alerts/client/views/list-alerts.client.view.html",controller:"AlertsListController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Alerts List"}}).state("alerts.create",{url:"/create",templateUrl:"modules/alerts/client/views/form-alert.client.view.html",controller:"AlertsController",controllerAs:"vm",resolve:{alertResolve:newAlert},data:{roles:["user","admin"],pageTitle:"Alerts Create"}}).state("alerts.edit",{url:"/:alertId/edit",templateUrl:"modules/alerts/client/views/form-alert.client.view.html",controller:"AlertsController",controllerAs:"vm",resolve:{alertResolve:getAlert},data:{roles:["user","admin"],pageTitle:"Edit Alert {{ alertResolve.name }}"}}).state("alerts.view",{url:"/:alertId",templateUrl:"modules/alerts/client/views/view-alert.client.view.html",controller:"AlertsController",controllerAs:"vm",resolve:{alertResolve:getAlert},data:{roles:["user","admin"],pageTitle:"Alert {{ articleResolve.name }}"}})}function getAlert($stateParams,AlertsService){return AlertsService.get({alertId:$stateParams.alertId}).$promise}function newAlert(AlertsService){return new AlertsService}angular.module("alerts").config(routeConfig),routeConfig.$inject=["$stateProvider"],getAlert.$inject=["$stateParams","AlertsService"],newAlert.$inject=["AlertsService"]}();
!function(){"use strict";function AlertsController($scope,$state,$http,Authentication,alert,ParamsService,lodash,AlertStatusService,Alerts,AdsetsService,AdaccountsService,$filter){function save(isValid){function successCallback(res){$state.go("alerts.list")}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.alert._id?vm.alert.$update(successCallback,errorCallback):vm.alert.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.alertForm"),!1)}var vm=this;vm.authentication=Authentication,vm.alert=alert,vm.error=null,vm.form={},vm.save=save,vm.trackingParams={},vm.adsets={},vm.alert.typeId=alert.typeId,vm.alertRules=[{value:"==",name:"Equal"},{value:">",name:"Greater Than"},{value:">=",name:"Greater Or Equal"},{value:"<",name:"Less Than"},{value:"<=",name:"Less Or Equal"},{value:"!=",name:"Not Equal"}],vm.alert.rule=lodash.find(vm.alertRules,{value:vm.alert.rule?vm.alert.rule:"=="}),vm.alertPeriods=Alerts.periods,vm.alert.period=lodash.find(vm.alertPeriods,{value:vm.alert.period?vm.alert.period:"15"}),vm.alertStatus=AlertStatusService.getStatusList(),vm.alert.status=lodash.find(vm.alertStatus,{value:vm.alert.status?vm.alert.status:"1"}),$scope.generateName=function(){var preparedName=("cost_per_action_type"!==vm.alert.param.value?vm.alert.param.value:"cpa")+"_",explodedRuleName=vm.alert.rule.name.split(" ");angular.forEach(explodedRuleName,function(word){preparedName+=$filter("lowercase")(word[0])}),preparedName+="_"+(void 0!==vm.alert.value?vm.alert.value:""),vm.alert.name=preparedName},vm.alert._id||(vm.alert.emailEnabled=!0,vm.alert.messengerEnabled=!0,vm.alert.smsEnabled=!1,vm.alert.adaccount_id=null),ParamsService.getParams().then(function(params){vm.trackingParams=params,params.forEach(function(param){param.name===vm.alert.paramLabel?(vm.alert.param=param,$scope.generateName()):(vm.alert.param=params[0],$scope.generateName())})}),$scope.adsets=[],$scope.adAccounts=[],$scope.preparedAdSets=[],$scope.preparedAdAccounts=[],$scope.accountsActiveOnly=!1,$scope.adsetsActiveOnly=!1,AdaccountsService.query(function(data){$scope.adAccounts=data,$scope.preparedAdAccounts=data}),AdsetsService.query(function(data){$scope.adSets=data,$scope.preparedAdSets=data}),$scope.changeAdaccount=function(){vm.alert.typeId=null,$scope.preparedAdSets=$filter("propsFilter")($scope.adSets,{adaccount_id:vm.alert.adaccount_id}),$scope.preparedAdSets=$scope.adsetsActiveOnly?$filter("propsFilter")($scope.preparedAdSets,{status:"ACTIVE"}):$scope.preparedAdSets},$scope.activeAccountsChange=function(){vm.alert.adaccount_id=null,vm.alert.typeId=null,$scope.preparedAdAccounts=$scope.accountsActiveOnly?$filter("propsFilter")($scope.preparedAdAccounts,{status:"1"}):$scope.preparedAdAccounts}}angular.module("alerts").controller("AlertsController",AlertsController),AlertsController.$inject=["$scope","$state","$http","Authentication","alertResolve","ParamsService","lodash","AlertStatusService","Alerts","AdsetsService","AdaccountsService","$filter"]}();
!function(){"use strict";function AlertsListController(AlertsService,$state,AlertStatusService,lodash,$http,Alerts){function remove(alert_id){console.log(vm.alerts),vm.alerts.forEach(function(alert){alert._id===alert_id&&(vm.alert=alert,console.log(vm.alert._id),confirm("Are you sure you want to delete?")&&vm.alert.$remove($state.go($state.current,{},{reload:!0})))})}var vm=this;vm.alerts=AlertsService.query(),vm.alertStatus=AlertStatusService.getStatusList(),vm.remove=remove,vm.alertPeriods=Alerts.periods,vm.init={count:25,page:1,sortBy:"name",sortOrder:"dsc"},vm.filterBy={name:"",typeId:"",adset_id:"",paramLabel:"",rule:"",value:"",period:"",status:""},vm.notSortBy=["action"],vm.getResource=function(params,paramsObj){var sortVal="";"dsc"===paramsObj.sortOrder?sortVal="-"+paramsObj.sortBy:"asc"===paramsObj.sortOrder&&(sortVal=paramsObj.sortBy),paramsObj.sort=sortVal;var urlApi="/api/alerts/";return $http.get(urlApi,{params:paramsObj}).then(function(response){return{rows:response.data.rows,header:response.data.header,pagination:response.data.pagination,sortBy:response.data["sort-by"],sortOrder:response.data["sort-order"]}})}}angular.module("alerts").controller("AlertsListController",AlertsListController),AlertsListController.$inject=["AlertsService","$state","AlertStatusService","lodash","$http","Alerts"]}();
!function(){"use strict";function AlertsService($resource){return $resource("api/alerts/:alertId",{alertId:"@_id"},{query:{method:"GET",isArray:!0,transformResponse:function(data){var dataObject=JSON.parse(data);return angular.fromJson(dataObject.rows)}},update:{method:"PUT"}})}angular.module("alerts").factory("AlertsService",AlertsService),AlertsService.$inject=["$resource"]}();
!function(){"use strict";function AlertStatusService(){var factObj={getStatusList:function(){return[{value:"0",name:"Disabled"},{value:"1",name:"Enabled"}]}};return factObj}angular.module("alerts").factory("AlertStatusService",AlertStatusService)}();
!function(){"use strict";function ParamsService($http){var factObj={getParams:function(){return $http.get("/api/trackingparams").then(function(r){return r.data.rows})}};return factObj}angular.module("alerts").factory("ParamsService",ParamsService),ParamsService.$inject=["$http"]}();
"use strict";angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Articles",state:"articles",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("topbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("topbar","articles",{title:"Create Articles",state:"articles.create",roles:["admin"]})}]);
"use strict";angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/client/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/client/views/create-article.client.view.html",data:{roles:["user","admin"]}}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/client/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/client/views/edit-article.client.view.html",data:{roles:["user","admin"]}})}]);
"use strict";angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","articleForm"),!1;var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","articleForm"),!1;var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]);
"use strict";angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]);
"use strict";angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]);
"use strict";angular.module("core").controller("DashboardController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]);
"use strict";angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}),scope.$on("show-errors-reset",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return reset()}),toggleClasses=function(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(attrs.showErrors.indexOf("skipFormGroupCheck")===-1&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["user","admin"]})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
!function(){"use strict";function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Notifications",state:"messages",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","messages",{title:"List Notifications",state:"messages.list"})}angular.module("messages").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("messages",{"abstract":!0,url:"/messages",template:"<ui-view/>"}).state("messages.list",{url:"",templateUrl:"modules/messages/client/views/list-messages.client.view.html",controller:"MessagesListController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Messages List"}}).state("messages.create",{url:"/create",templateUrl:"modules/messages/client/views/form-message.client.view.html",controller:"MessagesController",controllerAs:"vm",resolve:{messageResolve:newMessage},data:{roles:["user","admin"],pageTitle:"Messages Create"}}).state("messages.edit",{url:"/:messageId/edit",templateUrl:"modules/messages/client/views/form-message.client.view.html",controller:"MessagesController",controllerAs:"vm",resolve:{messageResolve:getMessage},data:{roles:["user","admin"],pageTitle:"Edit Message {{ messageResolve.name }}"}}).state("messages.view",{url:"/:messageId",templateUrl:"modules/messages/client/views/view-message.client.view.html",controller:"MessagesController",controllerAs:"vm",resolve:{messageResolve:getMessage},data:{roles:["user","admin"],pageTitle:"Message {{ articleResolve.name }}"}})}function getMessage($stateParams,MessagesService){return MessagesService.get({messageId:$stateParams.messageId}).$promise}function newMessage(MessagesService){return new MessagesService}angular.module("messages").config(routeConfig),routeConfig.$inject=["$stateProvider"],getMessage.$inject=["$stateParams","MessagesService"],newMessage.$inject=["MessagesService"]}();
!function(){"use strict";function MessagesListController(MessagesService,$http){var vm=this;vm.messages=MessagesService.query(),vm.init={count:25,page:1,sortBy:"created",sortOrder:"dsc"},vm.filterBy={name:"",adset_name:"",adset_id:"",status:"",type:"",message:"",user:"",created:""},vm.notSortBy=["name","adset_name","adset_id","user"],vm.getResource=function(params,paramsObj){var sortVal="";"dsc"===paramsObj.sortOrder?sortVal="-"+paramsObj.sortBy:"asc"===paramsObj.sortOrder&&(sortVal=paramsObj.sortBy),paramsObj.sort=sortVal;var urlApi="/api/messages/";return $http.get(urlApi,{params:paramsObj}).then(function(response){return{rows:response.data.rows,header:response.data.header,pagination:response.data.pagination,sortBy:response.data["sort-by"],sortOrder:response.data["sort-order"]}})}}angular.module("messages").controller("MessagesListController",MessagesListController),MessagesListController.$inject=["MessagesService","$http"]}();
!function(){"use strict";function MessagesController($scope,$state,Authentication,message){function remove(){confirm("Are you sure you want to delete?")&&vm.message.$remove($state.go("messages.list"))}function save(isValid){function successCallback(res){$state.go("messages.view",{messageId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.message._id?vm.message.$update(successCallback,errorCallback):vm.message.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.messageForm"),!1)}var vm=this;vm.authentication=Authentication,vm.message=message,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("messages").controller("MessagesController",MessagesController),MessagesController.$inject=["$scope","$state","Authentication","messageResolve"]}();
!function(){"use strict";function MessagesService($resource){return $resource("api/messages/:messageId",{messageId:"@_id"},{query:{method:"GET",isArray:!0,transformResponse:function(data){var dataObject=JSON.parse(data);return angular.fromJson(dataObject.rows)}},update:{method:"PUT"}})}angular.module("messages").factory("MessagesService",MessagesService),MessagesService.$inject=["$resource"]}();
!function(){"use strict";function NotificationeventsListController(NotificationeventsService,$http,Alerts){var vm=this;vm.notificationevents=NotificationeventsService.query(),vm.init={count:25,page:1,sortBy:"created",sortOrder:"dsc"},vm.filterBy={adset_name:"",adset:"",alert_name:"",period_name:"",param:"",value:"",alert_rule:"",alert_value:"",created:""},vm.notSortBy=["adset_name","alert_name","period_name","alert_rule","alert_value"],vm.getResource=function(params,paramsObj){var sortVal="";"dsc"===paramsObj.sortOrder?sortVal="-"+paramsObj.sortBy:"asc"===paramsObj.sortOrder&&(sortVal=paramsObj.sortBy),paramsObj.sort=sortVal;var urlApi="/api/notificationevents/";return $http.get(urlApi,{params:paramsObj}).then(function(response){return{rows:response.data.rows,header:response.data.header,pagination:response.data.pagination,sortBy:response.data["sort-by"],sortOrder:response.data["sort-order"]}})},vm.alertPeriods=Alerts.periods}angular.module("notificationevents").controller("NotificationeventsListController",NotificationeventsListController),NotificationeventsListController.$inject=["NotificationeventsService","$http","Alerts"]}();
!function(){"use strict";function NotificationeventsController($scope,$state,Authentication,notificationevent){function remove(){confirm("Are you sure you want to delete?")&&vm.notificationevent.$remove($state.go("notificationevents.list"))}function save(isValid){function successCallback(res){$state.go("notificationevents.view",{notificationeventId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.notificationevent._id?vm.notificationevent.$update(successCallback,errorCallback):vm.notificationevent.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.notificationeventForm"),!1)}var vm=this;vm.authentication=Authentication,vm.notificationevent=notificationevent,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("notificationevents").controller("NotificationeventsController",NotificationeventsController),NotificationeventsController.$inject=["$scope","$state","Authentication","notificationeventResolve"]}();
!function(){"use strict";function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Events",state:"notificationevents",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","notificationevents",{title:"List Events",state:"notificationevents.list"})}angular.module("notificationevents").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("notificationevents",{"abstract":!0,url:"/notificationevents",template:"<ui-view/>"}).state("notificationevents.list",{url:"",templateUrl:"modules/notificationevents/client/views/list-notificationevents.client.view.html",controller:"NotificationeventsListController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Notificationevents List"}}).state("notificationevents.create",{url:"/create",templateUrl:"modules/notificationevents/client/views/form-notificationevent.client.view.html",controller:"NotificationeventsController",controllerAs:"vm",resolve:{notificationeventResolve:newNotificationevent},data:{roles:["user","admin"],pageTitle:"Notificationevents Create"}}).state("notificationevents.edit",{url:"/:notificationeventId/edit",templateUrl:"modules/notificationevents/client/views/form-notificationevent.client.view.html",controller:"NotificationeventsController",controllerAs:"vm",resolve:{notificationeventResolve:getNotificationevent},data:{roles:["user","admin"],pageTitle:"Edit Notificationevent {{ notificationeventResolve.name }}"}}).state("notificationevents.view",{url:"/:notificationeventId",templateUrl:"modules/notificationevents/client/views/view-notificationevent.client.view.html",controller:"NotificationeventsController",controllerAs:"vm",resolve:{notificationeventResolve:getNotificationevent},data:{roles:["user","admin"],pageTitle:"Notificationevent {{ articleResolve.name }}"}})}function getNotificationevent($stateParams,NotificationeventsService){return NotificationeventsService.get({notificationeventId:$stateParams.notificationeventId}).$promise}function newNotificationevent(NotificationeventsService){return new NotificationeventsService}angular.module("notificationevents").config(routeConfig),routeConfig.$inject=["$stateProvider"],getNotificationevent.$inject=["$stateParams","NotificationeventsService"],newNotificationevent.$inject=["NotificationeventsService"]}();
!function(){"use strict";function NotificationeventsService($resource){return $resource("api/notificationevents/:notificationeventId",{notificationeventId:"@_id"},{query:{method:"GET",isArray:!0,transformResponse:function(data){var dataObject=JSON.parse(data);return angular.fromJson(dataObject.rows)}},update:{method:"PUT"}})}angular.module("notificationevents").factory("NotificationeventsService",NotificationeventsService),NotificationeventsService.$inject=["$resource"]}();
!function(){"use strict";function menuConfig(Menus){Menus.addMenuItem("topbar",{title:"Ad Attributes",state:"trackingparams",type:"dropdown",roles:["user"]}),Menus.addSubMenuItem("topbar","trackingparams",{title:"Ad Attributes",state:"trackingparams.list"}),Menus.addSubMenuItem("topbar","trackingparams",{title:"Add New Attribute",state:"trackingparams.create",roles:["user"]})}angular.module("trackingparams").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("trackingparams",{"abstract":!0,url:"/trackingparams",template:"<ui-view/>"}).state("trackingparams.list",{url:"",templateUrl:"modules/trackingparams/client/views/list-trackingparams.client.view.html",controller:"TrackingparamsListController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Trackingparams List"}}).state("trackingparams.create",{url:"/create",templateUrl:"modules/trackingparams/client/views/form-trackingparam.client.view.html",controller:"TrackingparamsController",controllerAs:"vm",resolve:{trackingparamResolve:newTrackingparam},data:{roles:["user","admin"],pageTitle:"Trackingparams Create"}}).state("trackingparams.edit",{url:"/:trackingparamId/edit",templateUrl:"modules/trackingparams/client/views/form-trackingparam.client.view.html",controller:"TrackingparamsController",controllerAs:"vm",resolve:{trackingparamResolve:getTrackingparam},data:{roles:["user","admin"],pageTitle:"Edit Trackingparam {{ trackingparamResolve.name }}"}}).state("trackingparams.view",{url:"/:trackingparamId",templateUrl:"modules/trackingparams/client/views/view-trackingparam.client.view.html",controller:"TrackingparamsController",controllerAs:"vm",resolve:{trackingparamResolve:getTrackingparam},data:{roles:["user","admin"],pageTitle:"Trackingparam {{ articleResolve.name }}"}})}function getTrackingparam($stateParams,TrackingparamsService){return TrackingparamsService.get({trackingparamId:$stateParams.trackingparamId}).$promise}function newTrackingparam(TrackingparamsService){return new TrackingparamsService}angular.module("trackingparams").config(routeConfig),routeConfig.$inject=["$stateProvider"],getTrackingparam.$inject=["$stateParams","TrackingparamsService"],newTrackingparam.$inject=["TrackingparamsService"]}();
!function(){"use strict";function TrackingparamsListController(TrackingparamsService,$state,$http){var vm=this;vm.trackingparams=TrackingparamsService.query(),vm.init={count:25,page:1,sortBy:"name",sortOrder:"asc"},vm.filterBy={name:"",value:"",description:""},vm.notSortBy=["action"],vm.getResource=function(params,paramsObj){var sortVal="";"dsc"===paramsObj.sortOrder?sortVal="-"+paramsObj.sortBy:"asc"===paramsObj.sortOrder&&(sortVal=paramsObj.sortBy),paramsObj.sort=sortVal;var urlApi="/api/trackingparams/";return $http.get(urlApi,{params:paramsObj}).then(function(response){return{rows:response.data.rows,header:response.data.header,pagination:response.data.pagination,sortBy:response.data["sort-by"],sortOrder:response.data["sort-order"]}})},vm.remove=function(index){"undefined"!=typeof vm.trackingparams[index]?(vm.param=vm.trackingparams[index],confirm("Are you sure you want to delete?")&&vm.param.$remove($state.go($state.current,{},{reload:!0}))):confirm("Current index doesn't exist")}}angular.module("trackingparams").controller("TrackingparamsListController",TrackingparamsListController),TrackingparamsListController.$inject=["TrackingparamsService","$state","$http"]}();
!function(){"use strict";function TrackingparamsController($scope,$state,Authentication,trackingparam){function remove(){confirm("Are you sure you want to delete?")&&vm.trackingparam.$remove($state.go("trackingparams.list"))}function save(isValid){function successCallback(res){$state.go("trackingparams.list")}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.trackingparam._id?vm.trackingparam.$update(successCallback,errorCallback):vm.trackingparam.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.trackingparamForm"),!1)}var vm=this;vm.authentication=Authentication,vm.trackingparam=trackingparam,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("trackingparams").controller("TrackingparamsController",TrackingparamsController),TrackingparamsController.$inject=["$scope","$state","Authentication","trackingparamResolve"]}();
!function(){"use strict";function TrackingparamsService($resource){return $resource("api/trackingparams/:trackingparamId",{trackingparamId:"@_id"},{query:{method:"GET",isArray:!0,transformResponse:function(data){var dataObject=JSON.parse(data);return angular.fromJson(dataObject.rows)}},update:{method:"PUT"}})}angular.module("trackingparams").factory("TrackingparamsService",TrackingparamsService),TrackingparamsService.$inject=["$resource"]}();
"use strict";angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]);
"use strict";angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),console.log(url),$window.location.href=url}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]);
"use strict";angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]);
"use strict";angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin===password})})}}}]);
"use strict";angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}});
"use strict";angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]);
"use strict";angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]);
"use strict";angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]);
"use strict";angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]);
!function(){"use strict";function templates($templateCache){$templateCache.put("modules/adaccounts/views/form-adaccount.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>{{vm.adaccount._id ? \'Edit Ad Account\' : \'New Ad Account\'}}</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="vm.form.adaccountForm" class="form-horizontal" ng-submit="vm.save(vm.form.adaccountForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="status">Status</label>\r\n          <input name="status" type="text" ng-model="vm.adaccount.status" id="status" class="form-control" placeholder="Status" required>\r\n          <div ng-messages="vm.form.adaccountForm.status.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Adaccount status is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <button type="submit" class="btn btn-default">{{vm.adaccount._id ? \'Update\' : \'Create\'}}</button>\r\n        </div>\r\n        <div ng-show="vm.error" class="text-danger">\r\n          <strong ng-bind="vm.error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/adaccounts/views/list-adaccounts.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>Ad Accounts</h1>\r\n  </div>\r\n  <div class="form-group">\r\n    <div class="col-sm-3 ng-tasty-filter">\r\n      <label class="control-label">Filters by Account Name :</label>\r\n      <input type="text" class="form-control input-sm" ng-model="vm.filterBy.account_name" />\r\n    </div>\r\n  </div>\r\n  <div  tasty-table bind-resource-callback="vm.getResource" bind-init="vm.init"   bind-filters="vm.filterBy" watch-resource="collection" class="container">\r\n    <table data-ng-show="rows.length !== 0" class="table table-striped ng-tasty">\r\n      <thead tasty-thead>\r\n      </thead>\r\n      <tbody>\r\n        <tr data-ng-repeat="(index,row) in rows">\r\n          <td data-ng-bind="row.account_id"></td>\r\n          <td data-ng-bind="row.account_name"></td>\r\n          <td ng-repeat="value in vm.status" ng-if="value.status==row.status" data-ng-bind="value.label"></td>\r\n          <td data-ng-bind="row.user.displayName"></td>\r\n          <td>\r\n            <div>\r\n              <a class="btn btn-primary btn-sm" data-ng-click="vm.remove(index)">\r\n                <i class="glyphicon glyphicon-trash"></i>\r\n              </a>\r\n            </div>\r\n          </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <div tasty-pagination data-ng-show="rows.length !== 0"></div>\r\n  </div>\r\n  <div class="alert alert-warning text-center" data-ng-if="vm.adaccounts.$resolved && !vm.adaccounts.length">\r\n    There are no Ad Accounts.\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/adaccounts/views/view-adaccount.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1 data-ng-bind="vm.adaccount.account_id"></h1>\r\n  </div>\r\n  <div class="pull-right"\r\n       data-ng-show="vm.adaccount.isCurrentUserOwner">\r\n    <a class="btn btn-primary"\r\n       data-ui-sref="adaccounts.edit({ adaccountId: vm.adaccount._id })">\r\n      <i class="glyphicon glyphicon-edit"></i>\r\n    </a>\r\n    <a class="btn btn-primary" data-ng-click="vm.remove()">\r\n      <i class="glyphicon glyphicon-trash"></i>\r\n    </a>\r\n  </div>\r\n  <small>\r\n    <em class="text-muted">\r\n      Status\r\n      <span data-ng-if="vm.adaccount.user"\r\n            data-ng-bind="vm.adaccount.status"></span>\r\n      <br/>\r\n      <span data-ng-if="vm.adaccount.user"\r\n            data-ng-bind="vm.adaccount.user.displayName"></span>\r\n      <span data-ng-if="!vm.adaccount.user">Deleted User</span>\r\n      <span data-ng-bind="vm.adaccount.created | date:\'mediumDate\'"></span>\r\n    </em>\r\n  </small>\r\n  <p class="lead" data-ng-bind="vm.adaccount.content"></p>\r\n</section>\r\n'),$templateCache.put("modules/adsets/views/form-adset.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>{{vm.adset._id ? \'Edit Adset\' : \'New Adset\'}}</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="vm.form.adsetForm" class="form-horizontal" ng-submit="vm.save(vm.form.adsetForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="name">Name</label>\r\n          <input name="name" type="text" ng-model="vm.adset.name" id="name" class="form-control" placeholder="Name" required>\r\n          <div ng-messages="vm.form.adsetForm.name.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Adset name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <button type="submit" class="btn btn-default">{{vm.adset._id ? \'Update\' : \'Create\'}}</button>\r\n        </div>\r\n        <div ng-show="vm.error" class="text-danger">\r\n          <strong ng-bind="vm.error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/adsets/views/list-adsets.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>Adsets</h1>\r\n  </div>\r\n  <div class="form-group">\r\n    <div class="col-sm-3 ng-tasty-filter">\r\n      <label class="control-label">Filters by Adset Name :</label>\r\n      <input type="text" class="form-control input-sm" ng-model="vm.filterBy.adset_name" />\r\n    </div>\r\n  </div>\r\n  <div tasty-table bind-resource-callback="vm.getResource" bind-init="vm.init"   bind-filters="vm.filterBy" watch-resource="collection" class="container">\r\n\r\n    <table data-ng-show="rows.length !== 0" class="table ng-tasty table-striped">\r\n      <thead tasty-thead>\r\n      <tr>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr data-ng-repeat="row in rows" >\r\n          <td ><small data-ng-bind="row.camp_name"></small></td>\r\n          <td ><small data-ng-bind="row.adset_name"></small></td>\r\n          <td ><small data-ng-bind="row.adset_id"></small></td>\r\n          <td ><small data-ng-bind="row.status"></small></td>\r\n          <td ><small data-ng-bind="row.reach"></small></td>\r\n          <td ><small data-ng-bind="row.daily_budget"></small></td>\r\n          <td ><small data-ng-bind="row.amount_spent"></small></td>\r\n          <td ><small data-ng-bind="row.schedule"></small></td>\r\n          <td><small data-ng-bind="row.type"></small></td>\r\n          <td ><small data-ng-bind="row.user.displayName"></small></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div tasty-pagination data-ng-show="rows.length !== 0"></div>\r\n  </div>\r\n  <div class="alert alert-warning text-center" data-ng-if="vm.adsets.$resolved && !vm.adsets.length">\r\n    There are no alerts Adsets\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/adsets/views/view-adset.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1 data-ng-bind="vm.adset.name"></h1>\r\n  </div>\r\n  <div class="pull-right"\r\n       data-ng-show="vm.adset.isCurrentUserOwner">\r\n    <a class="btn btn-primary"\r\n       data-ui-sref="adsets.edit({ adsetId: vm.adset._id })">\r\n      <i class="glyphicon glyphicon-edit"></i>\r\n    </a>\r\n    <a class="btn btn-primary" data-ng-click="vm.remove()">\r\n      <i class="glyphicon glyphicon-trash"></i>\r\n    </a>\r\n  </div>\r\n  <small>\r\n    <em class="text-muted">\r\n      Posted on\r\n      <span data-ng-bind="vm.adset.created | date:\'mediumDate\'"></span>\r\n      by\r\n      <span data-ng-if="vm.adset.user"\r\n            data-ng-bind="vm.adset.user.displayName"></span>\r\n      <span data-ng-if="!vm.adset.user">Deleted User</span>\r\n    </em>\r\n  </small>\r\n  <p class="lead" data-ng-bind="vm.adset.content"></p>\r\n</section>\r\n'),$templateCache.put("modules/alerts/views/form-alert.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>{{vm.alert._id ? \'Edit Alert\' : \'New Alert\'}}</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="vm.form.alertForm" class="form-horizontal" ng-submit="vm.save(vm.form.alertForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group">\r\n          <label class="story-label">For any active Ads under:</label>\r\n        </div>\r\n\r\n        <div class="form-group">\r\n          <label class="control-label label-inline" for="adAccount">Ad Account:</label>\r\n          <ui-select id="adAccount" ng-model="vm.alert.adaccount_id" theme="select2" style="width: 50%"  title="Choose an Ad Account" append-to-body="false" ng-change="changeAdaccount()">\r\n            <ui-select-match placeholder="Select Ad Account">{{$select.selected.account_name}}</ui-select-match>\r\n            <ui-select-choices repeat="adAccount.account_id as adAccount in preparedAdAccounts | propsFilter: {account_name: $select.search}">\r\n              <div ng-bind-html="adAccount.account_name | highlight: $select.search"></div>\r\n            </ui-select-choices>\r\n          </ui-select>\r\n          <div class="checkbox abc-checkbox activityCheckbox" >\r\n            <input type="checkbox" ng-model="accountsActiveOnly" id="accountsActiveOnly" ng-change="activeAccountsChange()">\r\n            <label for="accountsActiveOnly">\r\n              Active Only\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label label-inline" for="type_id">Adset:</label>\r\n          <ui-select id="type_id" name="typeId" ng-model="vm.alert.typeId" theme="select2" style="width: 50%"  title="Choose an Ad Set" append-to-body="false" required ng-disabled="(vm.alert.adaccount_id == null)">\r\n            <ui-select-match placeholder="{{vm.alert.adaccount_id == null ? \'Select Ad Account First\' : \'Select Ad Set\'}}">{{$select.selected.adset_name}}</ui-select-match>\r\n            <ui-select-choices repeat="adset.adset_id as adset in preparedAdSets | propsFilter: {adset_name: $select.search}">\r\n              <div ng-bind-html="adset.adset_name | highlight: $select.search"></div>\r\n            </ui-select-choices>\r\n          </ui-select>\r\n          <div class="checkbox abc-checkbox activityCheckbox" >\r\n            <input type="checkbox" ng-model="adsetsActiveOnly" id="adsetsActiveOnly" ng-change="changeAdaccount()" ng-disabled="(vm.alert.adaccount_id == null)">\r\n            <label for="adsetsActiveOnly">\r\n              Active Only\r\n            </label>\r\n          </div><br>\r\n          <div ng-messages="vm.form.alertForm.name.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Adset name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <label class="story-label control-label">Send me a notification via:</label>\r\n          <div class="checkbox abc-checkbox activityCheckbox" >\r\n            <input type="checkbox" ng-model="vm.alert.messengerEnabled" id="messengerEnabled" name="messengerEnabled">\r\n            <label for="messengerEnabled">\r\n              FB Messenger\r\n            </label>\r\n          </div>\r\n          <div class="checkbox abc-checkbox activityCheckbox" >\r\n            <input type="checkbox" ng-model="vm.alert.emailEnabled" id="emailEnabled" name="emailEnabled">\r\n            <label for="emailEnabled">\r\n              Email\r\n            </label>\r\n          </div>\r\n          <div class="checkbox abc-checkbox activityCheckbox" >\r\n            <input type="checkbox" ng-model="vm.alert.smsEnabled" id="smsEnabled" name="smsEnabled" disabled>\r\n            <label for="smsEnabled">\r\n              SMS\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="story-label control-label">When the</label>\r\n          <select name="param" id="param" class="form-control"\r\n                  ng-options="option.name for option in vm.trackingParams track by option.value"\r\n                  ng-model="vm.alert.param" ng-change="generateName()"></select>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="story-label control-label">is</label>\r\n          <select name="rule" id="rule" class="form-control"\r\n                  ng-options="option.name for option in vm.alertRules track by option.value"\r\n                  ng-model="vm.alert.rule" ng-change="generateName()"></select>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <input name="value" type="text" ng-model="vm.alert.value" id="value" class="form-control" placeholder="Enter value" required ng-change="generateName()">\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="story-label control-label">The system will check for this event every</label>\r\n          <select name="rule" id="period" class="form-control"\r\n                  ng-options="option.name for option in vm.alertPeriods track by option.value"\r\n                  ng-model="vm.alert.period"></select>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="story-label control-label">Save this alert as:</label>\r\n          <input name="name" type="text" ng-model="vm.alert.name" id="name" class="form-control" placeholder="Enter name" required>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="story-label control-label">and on creation, set the status to</label>\r\n          <select name="rule" id="status" class="form-control"\r\n                  ng-options="option.name for option in vm.alertStatus track by option.value"\r\n                  ng-model="vm.alert.status"></select>\r\n        </div>\r\n        <div class="form-group">\r\n          <button type="submit" class="btn btn-default">{{vm.alert._id ? \'Update\' : \'Create\'}}</button>\r\n        </div>\r\n        <div ng-show="vm.error" class="text-danger">\r\n          <strong ng-bind="vm.error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/alerts/views/list-alerts.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>Alerts</h1>\r\n  </div>\r\n  <div tasty-table bind-resource-callback="vm.getResource" bind-init="vm.init"   bind-filters="vm.filterBy" watch-resource="collection" class="container">\r\n    <table data-ng-show="rows.length !== 0" class="table ng-tasty table-striped">\r\n      <thead tasty-thead bind-not-sort-by="vm.notSortBy">\r\n      </thead>\r\n      <tbody>\r\n        <tr data-ng-repeat="(index,alert) in rows">\r\n          <td data-ng-bind="alert.name"></td>\r\n          <td data-ng-bind="alert.typeId"></td>\r\n          <td data-ng-bind="alert.paramLabel"></td>\r\n          <td data-ng-bind="alert.rule"></td>\r\n          <td data-ng-bind="alert.value"></td>\r\n          <td ng-repeat="(key, period) in vm.alertPeriods" ng-if="period.value==alert.period" data-ng-bind="period.name"></td>\r\n          <td ng-repeat="(key, status) in vm.alertStatus" ng-if="status.value==alert.status" data-ng-bind="status.name"></td>\r\n          <td>\r\n            <div>\r\n              <a class="btn btn-primary btn-sm"\r\n                 data-ui-sref="alerts.edit({ alertId: alert._id })">\r\n                <i class="glyphicon glyphicon-edit"></i>\r\n              </a>\r\n              <a class="btn btn-primary btn-sm" data-ng-click="vm.remove(alert._id)">\r\n                <i class="glyphicon glyphicon-trash"></i>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div tasty-pagination data-ng-show="rows.length !== 0"></div>\r\n  </div>\r\n\r\n  <div class="alert alert-warning text-center" data-ng-if="vm.alerts.$resolved && !vm.alerts.length">\r\n    There are no alerts\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/alerts/views/view-alert.client.view.html",'<section>\r\n\r\n\r\n\r\n  <div class="container">\r\n    <h2>Contextual Classes</h2>\r\n    <p>Contextual classes can be used to color table rows or table cells. The classes that can be used are: .active, .success, .info, .warning, and .danger.</p>\r\n    <table class="table">\r\n      <thead>\r\n      <tr>\r\n        <th>Firstname</th>\r\n        <th>Lastname</th>\r\n        <th>Email</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr class="success">\r\n        <td>John</td>\r\n        <td>Doe</td>\r\n        <td>john@example.com</td>\r\n      </tr>\r\n      <tr class="danger">\r\n        <td>Mary</td>\r\n        <td>Moe</td>\r\n        <td>mary@example.com</td>\r\n      </tr>\r\n      <tr class="info">\r\n        <td>July</td>\r\n        <td>Dooley</td>\r\n        <td>july@example.com</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n\r\n\r\n  <div class="page-header">\r\n    <h1 data-ng-bind="vm.alert.name"></h1>\r\n  </div>\r\n  <div class="pull-right"\r\n       data-ng-show="vm.alert.isCurrentUserOwner">\r\n    <a class="btn btn-primary"\r\n       data-ui-sref="alerts.edit({ alertId: vm.alert._id })">\r\n      <i class="glyphicon glyphicon-edit"></i>\r\n    </a>\r\n    <a class="btn btn-primary" data-ng-click="vm.remove()">\r\n      <i class="glyphicon glyphicon-trash"></i>\r\n    </a>\r\n  </div>\r\n  <small>\r\n    <em class="text-muted">\r\n      Posted on\r\n      <span data-ng-bind="vm.alert.created | date:\'mediumDate\'"></span>\r\n      by\r\n      <span data-ng-if="vm.alert.user"\r\n            data-ng-bind="vm.alert.user.displayName"></span>\r\n      <span data-ng-if="!vm.alert.user">Deleted User</span>\r\n    </em>\r\n  </small>\r\n  <p class="lead" data-ng-bind="vm.alert.content"></p>\r\n</section>\r\n'),$templateCache.put("modules/articles/views/create-article.client.view.html",'<section ng-controller="ArticlesController">\r\n  <div class="page-header">\r\n    <h1>New Article</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="articleForm" class="form-horizontal" ng-submit="create(articleForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label for="title">Title</label>\r\n          <input name="title" type="text" ng-model="title" id="title" class="form-control" placeholder="Title" required>\r\n          <div ng-messages="articleForm.title.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Article title is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <label for="content">Content</label>\r\n          <textarea name="content" ng-model="content" id="content" class="form-control" cols="30" rows="10" placeholder="Content"></textarea>\r\n        </div>\r\n        <div class="form-group">\r\n          <input type="submit" class="btn btn-default">\r\n        </div>\r\n        <div ng-show="error" class="text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/articles/views/edit-article.client.view.html",'<section ng-controller="ArticlesController" ng-init="findOne()">\r\n  <div class="page-header">\r\n    <h1>Edit Article</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="articleForm" class="form-horizontal" ng-submit="update(articleForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label for="title">Title</label>\r\n          <input name="title" type="text" ng-model="article.title" id="title" class="form-control" placeholder="Title" required>\r\n          <div ng-messages="articleForm.title.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Article title is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <label for="content">Content</label>\r\n          <textarea name="content" ng-model="article.content" id="content" class="form-control" cols="30" rows="10" placeholder="Content"></textarea>\r\n        </div>\r\n        <div class="form-group">\r\n          <input type="submit" value="Update" class="btn btn-default">\r\n        </div>\r\n        <div ng-show="error" class="text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/articles/views/list-articles.client.view.html",'<section ng-controller="ArticlesController" ng-init="find()">\r\n  <div class="page-header">\r\n    <h1>Articles</h1>\r\n  </div>\r\n  <div class="list-group">\r\n    <a ng-repeat="article in articles" ui-sref="articles.view({articleId: article._id})" class="list-group-item">\r\n      <small class="list-group-item-text">\r\n        Posted on\r\n        <span ng-bind="article.created | date:\'mediumDate\'"></span>\r\n        by\r\n        <span ng-bind="article.user.displayName"></span>\r\n      </small>\r\n      <h4 class="list-group-item-heading" ng-bind="article.title"></h4>\r\n      <p class="list-group-item-text" ng-bind="article.content"></p>\r\n    </a>\r\n  </div>\r\n  <div class="alert alert-warning text-center" ng-if="articles.$resolved && !articles.length">\r\n    No articles yet, why don\'t you <a ui-sref="articles.create">create one</a>?\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/articles/views/view-article.client.view.html",'<section ng-controller="ArticlesController" ng-init="findOne()">\r\n  <div class="page-header">\r\n    <h1 ng-bind="article.title"></h1>\r\n  </div>\r\n  <div class="pull-right" ng-show="authentication.user._id == article.user._id">\r\n    <a class="btn btn-primary" ui-sref="articles.edit({articleId: article._id})">\r\n      <i class="glyphicon glyphicon-edit"></i>\r\n    </a>\r\n    <a class="btn btn-primary" ng-click="remove();">\r\n      <i class="glyphicon glyphicon-trash"></i>\r\n    </a>\r\n  </div>\r\n  <small>\r\n    <em class="text-muted">\r\n      Posted on\r\n      <span ng-bind="article.created | date:\'mediumDate\'"></span>\r\n      by\r\n      <span ng-bind="article.user.displayName"></span>\r\n    </em>\r\n  </small>\r\n  <p class="lead" ng-bind="article.content"></p>\r\n</section>\r\n'),$templateCache.put("modules/core/views/400.client.view.html",'<h1>Bad Request</h1>\r\n<div class="alert alert-danger" role="alert">\r\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\r\n  <span class="sr-only">Error:</span>\r\n  You made a bad request\r\n</div>\r\n'),$templateCache.put("modules/core/views/403.client.view.html",'<h1>Forbidden</h1>\r\n<div class="alert alert-danger" role="alert">\r\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\r\n  <span class="sr-only">Error:</span>\r\n  You are not authorized to access this resource\r\n</div>\r\n'),$templateCache.put("modules/core/views/404.client.view.html",'<h1>Page Not Found</h1>\r\n<div class="alert alert-danger" role="alert">\r\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\r\n  <span class="sr-only">Error:</span> Page Not Found\r\n</div>\r\n'),$templateCache.put("modules/core/views/dashboard.client.view.html",'<section ng-controller="DashboardController">\r\n  <div class="jumbotron text-center main-jumbotron">\r\n    <div class="row">\r\n      <div  class="col-md-6 col-md-offset-3 col-sm-6 col-sm-offset-3 col-xs-12">\r\n        <img alt="Shared.com" class="img-responsive text-center" src="modules/core/client/img/brand/logo2.png" />\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <h1>Dashboard</h1>\r\n\r\n    <div class="row">\r\n      <p ng-hide="authentication.user">\r\n        <a class="btn btn-primary-shared btn-lg" href="authentication/signin" >Sign In</a>\r\n      </p>\r\n      <p ng-show="authentication.user">\r\n        <a class="btn btn-primary-shared btn-lg" href="settings/profile" >Settings</a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n</section>\r\n'),$templateCache.put("modules/core/views/header.client.view.html",'<div class="container" ng-controller="HeaderController">\r\n  <div class="navbar-header">\r\n    <button class="navbar-toggle" type="button" ng-click="toggleCollapsibleMenu()">\r\n      <span class="sr-only">Toggle navigation</span>\r\n      <span class="icon-bar"></span>\r\n      <span class="icon-bar"></span>\r\n      <span class="icon-bar"></span>\r\n    </button>\r\n    <a ui-sref="home" class="navbar-brand">Media Buyers</a>\r\n  </div>\r\n  <nav class="collapse navbar-collapse" collapse="!isCollapsed" role="navigation">\r\n    <ul class="nav navbar-nav" ng-if="menu.shouldRender(authentication.user);">\r\n      <li ng-repeat="item in menu.items | orderBy: \'position\'" ng-if="item.shouldRender(authentication.user);" ng-switch="item.type" ng-class="{ active: $state.includes(item.state), dropdown: item.type === \'dropdown\' }" class="{{item.class}}" dropdown="item.type === \'dropdown\'">\r\n        <a ng-switch-when="dropdown" class="dropdown-toggle" dropdown-toggle role="button">{{::item.title}}&nbsp;<span class="caret"></span></a>\r\n        <ul ng-switch-when="dropdown" class="dropdown-menu">\r\n          <li ng-repeat="subitem in item.items | orderBy: \'position\'" ng-if="subitem.shouldRender(authentication.user);" ui-sref-active="active">\r\n            <a ui-sref="{{subitem.state}}" ng-bind="subitem.title"></a>\r\n          </li>\r\n        </ul>\r\n        <a ng-switch-default ui-sref="{{item.state}}" ng-bind="item.title"></a>\r\n      </li>\r\n    </ul>\r\n    <ul class="nav navbar-nav navbar-right" ng-hide="authentication.user">\r\n\r\n      <li class="divider-vertical"></li>\r\n      <li ui-sref-active="active">\r\n        <a ui-sref="authentication.signin">Sign In</a>\r\n      </li>\r\n    </ul>\r\n    <ul class="nav navbar-nav navbar-right" ng-show="authentication.user">\r\n      <li class="dropdown" dropdown>\r\n        <a class="dropdown-toggle user-header-dropdown-toggle" dropdown-toggle role="button">\r\n          <img ng-src="{{authentication.user.profileImageURL}}" alt="{{authentication.user.displayName}}" class="header-profile-image" />\r\n          <span ng-bind="authentication.user.displayName"></span> <b class="caret"></b>\r\n        </a>\r\n        <ul class="dropdown-menu" role="menu">\r\n          <li ui-sref-active="active">\r\n            <a ui-sref="settings.profile" ng-show="authentication.user">Edit Profile</a>\r\n          </li>\r\n          <li ui-sref-active="active" ng-show="authentication.user.provider === \'local\'">\r\n            <a ui-sref="settings.picture">Change Profile Picture</a>\r\n          </li>\r\n          <li ui-sref-active="active" ng-show="authentication.user.provider === \'local\'">\r\n            <a ui-sref="settings.password">Change Password</a>\r\n          </li>\r\n          <li ui-sref-active="active">\r\n            <a ui-sref="settings.accounts" ng-show="authentication.user.provider === \'local\'">Manage Social Accounts</a>\r\n          </li>\r\n          <li class="divider"></li>\r\n          <li>\r\n            <a href="/api/auth/signout" target="_self">Signout</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n'),$templateCache.put("modules/core/views/home.client.view.html",'<section ng-controller="HomeController">\r\n  <div class="jumbotron text-center main-jumbotron">\r\n    <div class="row">\r\n      <div  class="col-md-6 col-md-offset-3 col-sm-6 col-sm-offset-3 col-xs-12">\r\n        <img alt="Shared.com" class="img-responsive text-center" src="modules/core/client/img/brand/logo2.png" />\r\n      </div>\r\n    </div>\r\n    <br>\r\n\r\n    <div class="row">\r\n      <p ng-hide="authentication.user">\r\n        <a class="btn btn-primary-shared btn-lg" href="authentication/signin" >Sign In</a>\r\n      </p>\r\n      <p ng-show="authentication.user">\r\n        <a class="btn btn-primary-shared btn-lg" href="settings/profile" >Settings</a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n</section>\r\n'),$templateCache.put("modules/messages/views/form-message.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>{{vm.message._id ? \'Edit Message\' : \'New Message\'}}</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="vm.form.messageForm" class="form-horizontal" ng-submit="vm.save(vm.form.messageForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="name">Name</label>\r\n          <input name="name" type="text" ng-model="vm.message.name" id="name" class="form-control" placeholder="Name" required>\r\n          <div ng-messages="vm.form.messageForm.name.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Message name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <button type="submit" class="btn btn-default">{{vm.message._id ? \'Update\' : \'Create\'}}</button>\r\n        </div>\r\n        <div ng-show="vm.error" class="text-danger">\r\n          <strong ng-bind="vm.error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/messages/views/list-messages.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>Notifications</h1>\r\n  </div>\r\n\r\n\r\n  <div tasty-table bind-resource-callback="vm.getResource" bind-init="vm.init"   bind-filters="vm.filterBy" watch-resource="collection" class="container">\r\n    <table data-ng-show="rows.length !== 0" class="table ng-tasty table-striped">\r\n      <thead  tasty-thead bind-not-sort-by="vm.notSortBy">\r\n      <tr>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr data-ng-repeat="(index,message) in rows">\r\n          <td data-ng-bind="message.adset[0].alerts"></td>\r\n          <td data-ng-bind="message.adset[0].ids"></td>\r\n          <td data-ng-bind="message.adset[0].names"></td>\r\n          <td data-ng-bind="message.status"></td>\r\n          <td data-ng-bind="message.type"></td>\r\n          <td data-ng-bind="message.message"></td>\r\n          <td data-ng-bind="message.user.displayName"></td>\r\n          <td>{{message.created | date :  "dd.MM.y hh:mm:ss" }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div tasty-pagination data-ng-show="rows.length !== 0"></div>\r\n  </div>\r\n\r\n   <div class="alert alert-warning text-center" data-ng-if="vm.messages.$resolved && !vm.messages.length">\r\n     There are no messages\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/messages/views/view-message.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1 data-ng-bind="vm.message.name"></h1>\r\n  </div>\r\n  <div class="pull-right"\r\n       data-ng-show="vm.message.isCurrentUserOwner">\r\n    <a class="btn btn-primary"\r\n       data-ui-sref="messages.edit({ messageId: vm.message._id })">\r\n      <i class="glyphicon glyphicon-edit"></i>\r\n    </a>\r\n    <a class="btn btn-primary" data-ng-click="vm.remove()">\r\n      <i class="glyphicon glyphicon-trash"></i>\r\n    </a>\r\n  </div>\r\n  <small>\r\n    <em class="text-muted">\r\n      Posted on\r\n      <span data-ng-bind="vm.message.created | date:\'mediumDate\'"></span>\r\n      by\r\n      <span data-ng-if="vm.message.user"\r\n            data-ng-bind="vm.message.user.displayName"></span>\r\n      <span data-ng-if="!vm.message.user">Deleted User</span>\r\n    </em>\r\n  </small>\r\n  <p class="lead" data-ng-bind="vm.message.content"></p>\r\n</section>\r\n'),$templateCache.put("modules/notificationevents/views/form-notificationevent.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>{{vm.notificationevent._id ? \'Edit Notification Event\' : \'New Notification Event\'}}</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="vm.form.notificationeventForm" class="form-horizontal" ng-submit="vm.save(vm.form.notificationeventForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="name">Name</label>\r\n          <input name="name" type="text" ng-model="vm.notificationevent.name" id="name" class="form-control" placeholder="Name" required>\r\n          <div ng-messages="vm.form.notificationeventForm.name.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Notificationevent name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <button type="submit" class="btn btn-default">{{vm.notificationevent._id ? \'Update\' : \'Create\'}}</button>\r\n        </div>\r\n        <div ng-show="vm.error" class="text-danger">\r\n          <strong ng-bind="vm.error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),
$templateCache.put("modules/notificationevents/views/list-notificationevents.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>Notification Events</h1>\r\n  </div>\r\n  <div tasty-table bind-resource-callback="vm.getResource" bind-init="vm.init"   bind-filters="vm.filterBy"  watch-resource="collection"  class="container">\r\n    <table data-ng-show="rows.length !== 0" class="table ng-tasty">\r\n      <thead tasty-thead bind-not-sort-by="vm.notSortBy">\r\n      </thead>\r\n      <tbody>\r\n        <tr data-ng-repeat="row in rows" ng-class="{danger: row.rulePerfomed == \'1\', success: row.rulePerfomed == false}">\r\n          <td data-ng-bind="row.adsetData[0].adset_name"></td>\r\n          <td data-ng-bind="row.adset"></td>\r\n          <td data-ng-bind="row.alert.name"></td>\r\n          <td ng-repeat=" period in vm.alertPeriods" ng-if="period.value==row.alert.period" data-ng-bind="period.name"></td>\r\n          <td data-ng-bind="row.param"></td>\r\n          <td data-ng-bind="row.value"></td>\r\n          <td data-ng-bind="row.rule"></td>\r\n          <td data-ng-bind="row.alert.value"></td>\r\n          <td>{{row.created | date :  "dd.MM.y hh:mm:ss" }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div tasty-pagination data-ng-show="rows.length !== 0"></div>\r\n  </div>\r\n\r\n  <div class="alert alert-warning text-center" data-ng-if="vm.notificationevents.$resolved && !vm.notificationevents.length">\r\n    There are no Notification Events.\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/notificationevents/views/view-notificationevent.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1 data-ng-bind="vm.notificationevent.name"></h1>\r\n  </div>\r\n  <div class="pull-right"\r\n       data-ng-show="vm.notificationevent.isCurrentUserOwner">\r\n    <a class="btn btn-primary"\r\n       data-ui-sref="notificationevents.edit({ notificationeventId: vm.notificationevent._id })">\r\n      <i class="glyphicon glyphicon-edit"></i>\r\n    </a>\r\n    <a class="btn btn-primary" data-ng-click="vm.remove()">\r\n      <i class="glyphicon glyphicon-trash"></i>\r\n    </a>\r\n  </div>\r\n  <small>\r\n    <em class="text-muted">\r\n      Posted on\r\n      <span data-ng-bind="vm.notificationevent.created | date:\'mediumDate\'"></span>\r\n      by\r\n      <span data-ng-if="vm.notificationevent.user"\r\n            data-ng-bind="vm.notificationevent.user.displayName"></span>\r\n      <span data-ng-if="!vm.notificationevent.user">Deleted User</span>\r\n    </em>\r\n  </small>\r\n  <p class="lead" data-ng-bind="vm.notificationevent.content"></p>\r\n</section>\r\n'),$templateCache.put("modules/trackingparams/views/form-trackingparam.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>{{vm.trackingparam._id ? \'Edit Ad Attribute\' : \'Add New Ad Attribute\'}}</h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="vm.form.trackingparamForm" class="form-horizontal" ng-submit="vm.save(vm.form.trackingparamForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="name">Name</label>\r\n          <input name="name" type="text" ng-model="vm.trackingparam.name" id="name" class="form-control" placeholder="Name (will be used in dropdown)" required>\r\n          <div ng-messages="vm.form.trackingparamForm.name.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="value">Value</label>\r\n          <input name="value" type="text" ng-model="vm.trackingparam.value" id="value" class="form-control" placeholder="Value (api insights metric name)" required>\r\n          <div ng-messages="vm.form.trackingparamForm.value.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Value is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="value">Description</label>\r\n          <textarea name="description"  ng-model="vm.trackingparam.description" id="description" class="form-control" placeholder="Description (api insights metric description)" ></textarea>\r\n          <div ng-messages="vm.form.trackingparamForm.description.$error" role="alert">\r\n\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <button type="submit" class="btn btn-default">{{vm.trackingparam._id ? \'Update\' : \'Create\'}}</button>\r\n        </div>\r\n        <div ng-show="vm.error" class="text-danger">\r\n          <strong ng-bind="vm.error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/trackingparams/views/list-trackingparams.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>Ad Attributes</h1>\r\n  </div>\r\n  <div tasty-table bind-resource-callback="vm.getResource" bind-init="vm.init"   bind-filters="vm.filterBy" watch-resource="collection" class="container">\r\n    <table data-ng-show="rows.length !== 0" class="table ng-tasty table-striped">\r\n      <thead tasty-thead bind-not-sort-by="vm.notSortBy">\r\n      </thead >\r\n      <tbody>\r\n        <tr data-ng-repeat="(index,param) in rows">\r\n          <td data-ng-bind="param.name"></td>\r\n          <td data-ng-bind="param.value"></td>\r\n          <td data-ng-bind="param.description"></td>\r\n          <td>\r\n            <div>\r\n              <a class="btn btn-primary btn-sm"\r\n                 data-ui-sref="trackingparams.edit({ trackingparamId: param._id })">\r\n                <i class="glyphicon glyphicon-edit"></i>\r\n              </a>\r\n              <a class="btn btn-primary btn-sm" data-ng-click="vm.remove(index)">\r\n                <i class="glyphicon glyphicon-trash"></i>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div tasty-pagination data-ng-show="rows.length !== 0"></div>\r\n  </div>\r\n\r\n  <div class="alert alert-warning text-center" data-ng-if="vm.trackingparams.$resolved && !vm.trackingparams.length">\r\n    There are no Tracking Params\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/trackingparams/views/view-trackingparam.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1 data-ng-bind="vm.trackingparam.name"></h1>\r\n    <h6 class="list-group-item-heading" data-ng-bind="vm.trackingparam.value"></h6>\r\n    <p class="list-group-item-heading" data-ng-bind="vm.trackingparam.description"></p>\r\n  </div>\r\n  <div class="pull-right"\r\n       data-ng-show="vm.trackingparam.isCurrentUserOwner">\r\n    <a class="btn btn-primary"\r\n       data-ui-sref="trackingparams.edit({ trackingparamId: vm.trackingparam._id })">\r\n      <i class="glyphicon glyphicon-edit"></i>\r\n    </a>\r\n    <a class="btn btn-primary" data-ng-click="vm.remove()">\r\n      <i class="glyphicon glyphicon-trash"></i>\r\n    </a>\r\n  </div>\r\n  <small>\r\n    <em class="text-muted">\r\n      Posted on\r\n      <span data-ng-bind="vm.trackingparam.created | date:\'mediumDate\'"></span>\r\n      by\r\n      <span data-ng-if="vm.trackingparam.user"\r\n            data-ng-bind="vm.trackingparam.user.displayName"></span>\r\n      <span data-ng-if="!vm.trackingparam.user">Deleted User</span>\r\n    </em>\r\n  </small>\r\n  <p class="lead" data-ng-bind="vm.trackingparam.content"></p>\r\n</section>\r\n'),$templateCache.put("modules/users/views/admin/edit-user.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <h1>User <span ng-bind="user.username"></span></h1>\r\n  </div>\r\n  <div class="col-md-12">\r\n    <form name="userForm" ng-submit="update(userForm.$valid)" novalidate>\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label for="firstName">First Name</label>\r\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="user.firstName" placeholder="First Name" required />\r\n          <div ng-messages="userForm.firstName.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="lastName">Last Name</label>\r\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="user.lastName" placeholder="Last Name" required />\r\n          <div ng-messages="userForm.lastName.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label class="control-label" for="roles">Roles</label>\r\n          <div class="controls">\r\n            <input class="form-control" type="text" name="roles" ng-model="user.roles" id="roles" ng-list required />\r\n            <div ng-messages="userForm.roles.$error" role="alert">\r\n              <p class="help-block error-text" ng-message="required">At least one role is required.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="form-group">\r\n          <input type="submit" value="Update" class="btn btn-default">\r\n        </div>\r\n        <div ng-show="error" class="text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/users/views/admin/list-users.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <div class="row">\r\n      <div class="col-md-4">\r\n        <h1>Users</h1>\r\n      </div>\r\n      <div class="col-md-4" style="margin-top: 2em">\r\n        <input class="form-control col-md-4" type="text" ng-model="search" placeholder="Search" ng-change="figureOutItemsToDisplay()" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="list-group">\r\n    <a ng-repeat="user in pagedItems" ui-sref="admin.user({userId: user._id})" class="list-group-item">\r\n      <h4 class="list-group-item-heading" ng-bind="user.username"></h4>\r\n      <p class="list-group-item-text pull-right small" ng-bind="user.roles"></p>\r\n      <p class="list-group-item-text" ng-bind="user.email"></p>\r\n    </a>\r\n  </div>\r\n\r\n  <pagination boundary-links="true" max-size="8" items-per-page="itemsPerPage" total-items="filterLength" ng-model="currentPage" ng-change="pageChanged()"></pagination>\r\n</section>\r\n'),$templateCache.put("modules/users/views/admin/view-user.client.view.html",'<section>\r\n  <div class="page-header">\r\n    <div class="row">\r\n      <div class="col-md-6">\r\n        <h1 ng-bind="user.username"></h1>\r\n      </div>\r\n      <div class="col-md-4">\r\n        <a class="btn btn-primary" ui-sref="admin.user-edit({userId: user._id})">\r\n          <i class="glyphicon glyphicon-edit"></i>\r\n        </a>\r\n        <a class="btn btn-primary" ng-click="remove();" ng-if="user._id !== authentication.user._id">\r\n          <i class="glyphicon glyphicon-trash"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="row">\r\n    <div class="col-md-8">\r\n      <div class="row">\r\n        <div class="col-md-3"><strong>First Name</strong></div>\r\n        <div class="col-md-6" ng-bind="user.firstName"></div>\r\n      </div>\r\n      <hr/>\r\n      <div class="row">\r\n        <div class="col-md-3"><strong>Last Name</strong></div>\r\n        <div class="col-md-6" ng-bind="user.lastName"></div>\r\n      </div>\r\n      <hr/>\r\n      <div class="row">\r\n        <div class="col-md-3"><strong>Email</strong></div>\r\n        <div class="col-md-6" ng-bind="user.email"></div>\r\n      </div>\r\n      <hr/>\r\n      <div class="row">\r\n        <div class="col-md-3"><strong>Provider</strong></div>\r\n        <div class="col-md-6" ng-bind="user.provider"></div>\r\n      </div>\r\n      <hr/>\r\n      <div class="row">\r\n        <div class="col-md-3"><strong>Created</strong></div>\r\n        <div class="col-md-6" ng-bind="user.created"></div>\r\n      </div>\r\n      <hr/>\r\n      <div class="row">\r\n        <div class="col-md-3"><strong>Roles</strong></div>\r\n        <div class="col-md-6" ng-bind="user.roles"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/users/views/authentication/authentication.client.view.html",'<section class="row" ng-controller="AuthenticationController">\r\n  <h3 class="col-md-12 text-center">Sign in using your Facebook Account</h3>\r\n  <div class="col-md-12 text-center">\r\n    <img class="cursor-hand" ng-click="callOauthProvider(\'/api/auth/facebook\')" ng-src="/modules/users/client/img/buttons/facebook-login.png">\r\n\r\n  </div>\r\n\r\n</section>\r\n'),$templateCache.put("modules/users/views/authentication/signin.client.view.html",'<div ng-controller="AuthenticationController">\r\n  <h3 class="col-md-12 text-center">Or with your account</h3>\r\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\r\n    <form name="userForm" ng-submit="signin(userForm.$valid)" class="signin" novalidate autocomplete="off">\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label for="username">Username</label>\r\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\r\n          <div ng-messages="userForm.username.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="password">Password</label>\r\n          <input type="password" id="password" name="password" class="form-control" ng-model="credentials.password" placeholder="Password" required>\r\n          <div ng-messages="userForm.password.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="text-center form-group">\r\n          <button type="submit" class="btn btn-primary">Sign in</button>\r\n          &nbsp; or&nbsp;\r\n          <a ui-sref="authentication.signup">Sign up</a>\r\n        </div>\r\n        <div class="text-center forgot-password">\r\n          <a ui-sref="password.forgot">Forgot your password?</a>\r\n        </div>\r\n        <alert type="danger" ng-show="error" class="text-center text-danger">\r\n          <span ng-bind="error"></span>\r\n        </alert>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</div>\r\n'),$templateCache.put("modules/users/views/authentication/signup.client.view.html",'<div ng-controller="AuthenticationController">\r\n  <h3 class="col-md-12 text-center">Or sign up using your email</h3>\r\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\r\n    <form name="userForm" ng-submit="signup(userForm.$valid)" class="signin" novalidate autocomplete="off">\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label for="firstName">First Name</label>\r\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="credentials.firstName" placeholder="First Name" required>\r\n          <div ng-messages="userForm.firstName.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="lastName">Last Name</label>\r\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="credentials.lastName" placeholder="Last Name" required>\r\n          <div ng-messages="userForm.lastName.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="email">Email</label>\r\n          <input type="email" id="email" name="email" class="form-control" ng-model="credentials.email" placeholder="Email" lowercase required>\r\n          <div ng-messages="userForm.email.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\r\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="username">Username</label>\r\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\r\n          <div ng-messages="userForm.username.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="password">Password</label>\r\n            <input type="password" id="password" name="password" class="form-control" ng-model="credentials.password" placeholder="Password" popover="{{popoverMsg}}" popover-trigger="focus" password-validator required>\r\n          <div ng-messages="userForm.password.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\r\n            <div ng-repeat="passwordError in passwordErrors">\r\n              <p class="help-block error-text" ng-show="userForm.password.$error.requirements">{{passwordError}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" ng-show="!userForm.password.$error.required">\r\n          <label>Password Requirements</label>\r\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\r\n        </div>\r\n        <div class="text-center form-group">\r\n          <button type="submit" class="btn btn-primary">Sign up</button>\r\n          &nbsp; or&nbsp;\r\n          <a ui-sref="authentication.signin" class="show-signup">Sign in</a>\r\n        </div>\r\n        <div ng-show="error" class="text-center text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</div>\r\n'),$templateCache.put("modules/users/views/settings/change-password.client.view.html",'<section class="row" ng-controller="ChangePasswordController">\r\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\r\n    <form name="passwordForm" ng-submit="changeUserPassword(passwordForm.$valid)" class="signin" novalidate autocomplete="off">\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label for="currentPassword">Current Password</label>\r\n          <input type="password" id="currentPassword" name="currentPassword" class="form-control" ng-model="passwordDetails.currentPassword" placeholder="Current Password" required>\r\n          <div ng-messages="passwordForm.currentPassword.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Your current password is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="newPassword">New Password</label>\r\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="passwordDetails.newPassword" placeholder="New Password" popover="{{popoverMsg}}" popover-trigger="focus" password-validator required>\r\n          <div ng-messages="passwordForm.newPassword.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\r\n            <div ng-repeat="passwordError in passwordErrors">\r\n              <p class="help-block error-text" ng-show="passwordForm.newPassword.$error.requirements">{{passwordError}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="verifyPassword">Verify Password</label>\r\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="passwordDetails.newPassword" required>\r\n          <div ng-messages="passwordForm.verifyPassword.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Verify your new password.</p>\r\n            <p class="help-block error-text" ng-show=passwordForm.verifyPassword.$error.passwordVerify>Passwords do not match.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" ng-show="!passwordForm.newPassword.$error.required">\r\n          <label>Password Requirements</label>\r\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\r\n        </div>\r\n        <div class="text-center form-group">\r\n          <button type="submit" class="btn btn-primary">Save Password</button>\r\n        </div>\r\n        <div ng-show="success" class="text-center text-success">\r\n          <strong>Password Changed Successfully</strong>\r\n        </div>\r\n        <div ng-show="error" class="text-center text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/users/views/settings/change-profile-picture.client.view.html",'<section class="row" ng-controller="ChangeProfilePictureController">\r\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-3 col-md-4">\r\n    <form class="signin form-horizontal">\r\n      <fieldset>\r\n        <div class="form-group text-center">\r\n          <img ng-src="{{imageURL}}" alt="{{user.displayName}}" class="img-thumbnail user-profile-picture">\r\n        </div>\r\n        <div class="text-center form-group" ng-hide="uploader.queue.length">\r\n          <span class="btn btn-default btn-file">\r\n              Select Image <input type="file" nv-file-select uploader="uploader">\r\n          </span>\r\n        </div>\r\n        <div class="text-center form-group" ng-show="uploader.queue.length">\r\n          <button class="btn btn-primary" ng-click="uploadProfilePicture();">Upload</button>\r\n          <button class="btn btn-default" ng-click="cancelUpload();">Cancel</button>\r\n        </div>\r\n        <div ng-show="success" class="text-center text-success">\r\n          <strong>Profile Picture Changed Successfully</strong>\r\n        </div>\r\n        <div ng-show="error" class="text-center text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/users/views/settings/edit-profile.client.view.html",'<section class="row" ng-controller="EditProfileController">\r\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\r\n    <form name="userForm" ng-submit="updateUserProfile(userForm.$valid)" class="signin" novalidate autocomplete="off">\r\n      <fieldset>\r\n\r\n        <div class="form-group" show-errors>\r\n          <label for="firstName">First Name</label>\r\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="user.firstName" placeholder="First Name" required>\r\n          <div ng-messages="userForm.firstName.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="lastName">Last Name</label>\r\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="user.lastName" placeholder="Last Name" required>\r\n          <div ng-messages="userForm.lastName.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="email">Email</label>\r\n          <input type="email" id="email" name="email" class="form-control" ng-model="user.email" placeholder="Email" lowercase required>\r\n          <div ng-messages="userForm.email.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\r\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n\r\n          <label for="emailAlert">Send Email Alert:\r\n            <input name="emailAlert" id="emailAlert" type="checkbox" ng-model="user.emailAlert"\r\n                   ng-true-value=true ng-false-value=false>\r\n          </label>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="facebookId">Facebook ID</label>\r\n          <label id="facebookId" class="form-control" ng-bind="user.providerData.id"></label>\r\n        </div>\r\n\r\n        <div class="form-group" show-errors>\r\n          <label for="messenger">Messenger ID</label>\r\n          <input type="text" id="messenger" name="messengerId" class="form-control" ng-model="user.messengerId" placeholder="Messenger ID" lowercase>\r\n          <div ng-messages="userForm.messengerId.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Messenger ID is required.</p>\r\n            <p class="help-block error-text" ng-message="email">Messenger ID is invalid.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="messengerAlert">Send Messenger Alert:\r\n            <input name="messengerAlert" id="messengerAlert" type="checkbox" ng-model="user.messengerAlert"\r\n                   ng-true-value=true ng-false-value=false>\r\n          </label>\r\n        </div>\r\n\r\n        <div class="form-group " show-errors>\r\n          <label for="email">Phone</label>\r\n\r\n          <input type="text" id="phone" name="phone" class="form-control " ng-model="user.phone" placeholder="Phone i.e 613-123-4567" disabled>\r\n\r\n        </div>\r\n\r\n        <div ng-messages="userForm.phone.$error" role="alert"></div>\r\n        <div class="form-group disabled" show-errors>\r\n\r\n          <label for="smsAlert">Send SMS Alert:\r\n            <input name="smsAlert" type="checkbox" id="smsAlert" ng-model="user.smsAlert"\r\n                   ng-true-value=true ng-false-value=false disabled>\r\n          </label>\r\n        </div>\r\n\r\n        <div class="form-group hidden" show-errors>\r\n          <label for="username">Username</label>\r\n          <input type="text" id="username" name="username" class="form-control" ng-model="user.username" placeholder="Username" lowercase required>\r\n          <div ng-messages="userForm.username.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\r\n          </div>\r\n        </div>\r\n        <div class="text-center form-group">\r\n          <button type="submit" class="btn btn-primary">Save Profile</button>\r\n        </div>\r\n        <div ng-show="success" class="text-center text-success">\r\n          <strong>Profile Saved Successfully</strong>\r\n        </div>\r\n        <div ng-show="error" class="text-center text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/users/views/settings/manage-social-accounts.client.view.html",'<section class="row" ng-controller="SocialAccountsController">\r\n  <h3 class="col-md-12 text-center" ng-show="hasConnectedAdditionalSocialAccounts()">Connected social accounts:</h3>\r\n  <div class="col-md-12 text-center">\r\n    <div ng-repeat="(providerName, providerData) in user.additionalProvidersData" class="social-account-container">\r\n      <img ng-src="/modules/users/client/img/buttons/{{providerName}}.png">\r\n      <a class="btn btn-danger btn-remove-account" ng-click="removeUserSocialAccount(providerName)">\r\n        <i class="glyphicon glyphicon-trash"></i>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <h3 class="col-md-12 text-center" ng-show="hasConnectedAdditionalSocialAccounts()">Unconnected social accounts:</h3>\r\n  <div class="col-md-12 text-center">\r\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'facebook\')">\r\n      <img ng-src="/modules/users/client/img/buttons/facebook.png">\r\n      <a class="btn btn-success btn-remove-account" href="/api/auth/facebook" target="_self">\r\n        <i class="glyphicon glyphicon-plus"></i>\r\n      </a>\r\n    </div>\r\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'twitter\')">\r\n      <img ng-src="/modules/users/client/img/buttons/twitter.png">\r\n      <a class="btn btn-success btn-remove-account" href="/api/auth/twitter" target="_self">\r\n        <i class="glyphicon glyphicon-plus"></i>\r\n      </a>\r\n    </div>\r\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'google\')">\r\n      <img ng-src="/modules/users/client/img/buttons/google.png">\r\n      <a class="btn btn-success btn-remove-account" href="/api/auth/google" target="_self">\r\n        <i class="glyphicon glyphicon-plus"></i>\r\n      </a>\r\n    </div>\r\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'linkedin\')">\r\n      <img ng-src="/modules/users/client/img/buttons/linkedin.png">\r\n      <a class="btn btn-success btn-remove-account" href="/api/auth/linkedin" target="_self">\r\n        <i class="glyphicon glyphicon-plus"></i>\r\n      </a>\r\n    </div>\r\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'github\')">\r\n      <img ng-src="/modules/users/client/img/buttons/github.png">\r\n      <a class="btn btn-success btn-remove-account" href="/api/auth/github" target="_self">\r\n        <i class="glyphicon glyphicon-plus"></i>\r\n      </a>\r\n    </div>\r\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'paypal\')">\r\n      <img ng-src="/modules/users/client/img/buttons/paypal.png">\r\n      <a class="btn btn-success btn-remove-account" href="/api/auth/paypal" target="_self">\r\n        <i class="glyphicon glyphicon-plus"></i>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/users/views/settings/settings.client.view.html",'<section ng-controller="SettingsController">\r\n  <div class="page-header">\r\n    <h1>Settings</h1>\r\n  </div>\r\n  <div class="row">\r\n    <nav class="col-sm-3 col-md-3">\r\n      <ul class="nav nav-pills nav-stacked">\r\n        <li ui-sref-active="active">\r\n          <a ui-sref="settings.profile">Edit Profile</a>\r\n        </li>\r\n        <li ui-sref-active="active">\r\n          <a ui-sref="settings.picture">Change Profile Picture</a>\r\n        </li>\r\n        <li ui-sref-active="active" ng-show="user.provider === \'local\'">\r\n          <a ui-sref="settings.password">Change Password</a>\r\n        </li>\r\n        <li ui-sref-active="active">\r\n          <a ui-sref="settings.accounts" ng-show="user.provider === \'local\'">Manage Social Accounts</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div class="col-sm-9 col-md-8 settings-view">\r\n      <div ui-view></div>\r\n    </div>\r\n  </div>\r\n</section>\r\n'),
$templateCache.put("modules/users/views/password/forgot-password.client.view.html",'<section class="row" ng-controller="PasswordController">\r\n  <h3 class="col-md-12 text-center">Restore your password</h3>\r\n  <p class="small text-center">Enter your account username.</p>\r\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2">\r\n    <form name="forgotPasswordForm" ng-submit="askForPasswordReset(forgotPasswordForm.$valid)" class="form-horizontal" novalidate autocomplete="off">\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\r\n          <div ng-messages="forgotPasswordForm.username.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Enter a username.</p>\r\n          </div>\r\n        </div>\r\n        <div class="text-center form-group">\r\n          <button type="submit" class="btn btn-primary">Submit</button>\r\n        </div>\r\n        <div ng-show="error" class="text-center text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n        <div ng-show="success" class="text-center text-success">\r\n          <strong ng-bind="success"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n'),$templateCache.put("modules/users/views/password/reset-password-invalid.client.view.html",'<section class="row text-center">\r\n  <h3 class="col-md-12">Password reset is invalid</h3>\r\n  <a ui-sref="password.forgot" class="col-md-12">Ask for a new password reset</a>\r\n</section>\r\n'),$templateCache.put("modules/users/views/password/reset-password-success.client.view.html",'<section class="row text-center">\r\n  <h3 class="col-md-12">Password successfully reset</h3>\r\n  <a ui-sref="home" class="col-md-12">Continue to home page</a>\r\n</section>\r\n'),$templateCache.put("modules/users/views/password/reset-password.client.view.html",'<section class="row" ng-controller="PasswordController">\r\n  <h3 class="col-md-12 text-center">Reset your password</h3>\r\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\r\n    <form name="resetPasswordForm" ng-submit="resetUserPassword(resetPasswordForm.$valid)" class="signin form-horizontal" novalidate autocomplete="off">\r\n      <fieldset>\r\n        <div class="form-group" show-errors>\r\n          <label for="newPassword">New Password</label>\r\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="passwordDetails.newPassword" placeholder="New Password" autocomplete="new-password" popover="{{popoverMsg}}" popover-trigger="focus" popover-placement="top" password-validator required>\r\n          <div ng-messages="resetPasswordForm.newPassword.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\r\n            <div ng-repeat="passwordError in passwordErrors">\r\n              <p class="help-block error-text" ng-show="resetPasswordForm.newPassword.$error.requirements">{{passwordError}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" show-errors>\r\n          <label for="verifyPassword">Verify Password</label>\r\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="passwordDetails.newPassword" required>\r\n          <div ng-messages="resetPasswordForm.verifyPassword.$error" role="alert">\r\n            <p class="help-block error-text" ng-message="required">Enter the password again to verify.</p>\r\n            <p class="help-block error-text" ng-show=resetPasswordForm.verifyPassword.$error.passwordVerify>Passwords do not match.</p>\r\n          </div>\r\n        </div>\r\n        <div class="form-group" ng-show="!resetPasswordForm.newPassword.$error.required">\r\n          <label>Password Requirements</label>\r\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\r\n        </div>\r\n        <div class="text-center form-group">\r\n          <button type="submit" class="btn btn-primary">Update Password</button>\r\n        </div>\r\n        <div ng-show="error" class="text-center text-danger">\r\n          <strong ng-bind="error"></strong>\r\n        </div>\r\n        <div ng-show="success" class="text-center text-success">\r\n          <strong ng-bind="success"></strong>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</section>\r\n')}angular.module("core").run(templates),templates.$inject=["$templateCache"]}();